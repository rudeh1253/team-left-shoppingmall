package team.left.shoppingmall.member.dao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.sql.DataSource;

import team.left.shoppingmall.global.DataSourceContainer;

public class MemberDao {
    private static DataSource dataSource = DataSourceContainer.getDataSource();
    
    /**
     * 회원을 저장한다.
     * 
     * @return auto-generated key
     */
    public int insertMember(MemberCreationDto dto) {
        System.out.println("dto=" + dto);
        Connection conn = null;
        PreparedStatement stmt = null;
        ResultSet rs = null;
        
        try {
            conn = dataSource.getConnection();
            
            String sql = "INSERT INTO member "
                    + "(member_id, email, password, member_name, profile_img, birth_date, tel, address, gender, point, role, company, answer, is_deleted) "
                    + "VALUES "
                    + "(member_pk_seq.NEXTVAL, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            
            stmt = conn.prepareStatement(sql, new String[] { "member_id" });
            
            stmt.setString(1, dto.getEmail());
            stmt.setString(2, dto.getPassword());
            stmt.setString(3, dto.getMemberName());
            stmt.setString(4, dto.getProfileImg());
            stmt.setDate(5, Date.valueOf(dto.getBirthDate().toString()));
            stmt.setString(6, dto.getTel());
            stmt.setString(7, dto.getAddress());
            stmt.setString(8, dto.getGender());
            stmt.setInt(9, dto.getPoint());
            stmt.setString(10, dto.getRole());
            stmt.setString(11, dto.getCompany());
            stmt.setString(12, dto.getAnswer());
            stmt.setString(13, dto.isDeleted());
            
            int row = stmt.executeUpdate();
            if (row < 1) {
                throw new SQLException("DB가 변경되지 않았어요");
            }
            rs = stmt.getGeneratedKeys();
            int autogeneratedKey = 0;
            if (rs.next()) {
                autogeneratedKey = rs.getInt(1);
            }
            return autogeneratedKey;
        } catch (SQLException e) {
            throw new RuntimeException(e);
        } finally {
            if (rs != null) {
                try {
                    rs.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
            
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
            
            if (conn != null) {
                try {
                    conn.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }
}
